{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Country/Country.jsx","components/Graph/Graph.jsx","components/Footer/Footer.jsx","App.js","index.js","components/Country/Country.module.css","components/Footer/Footer.module.css","App.module.css","components/Cards/Cards.module.css","components/Graph/Graph.module.css","images/logo.png"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","options","weekday","year","month","day","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","sec","gutterBottom","variant","end","value","duration","separator","Date","toLocaleDateString","url","getData","country","a","countryUrl","axios","get","reqdData","getDailyData","map","date","reportDate","total","getCountries","countries","name","Country","changeCountry","useState","fetchedCountries","setFetchedCountries","useEffect","fetchCountries","FormControl","formControl","NativeSelect","chosen","defaultValue","onChange","e","target","i","key","Graph","dailyData","setDailyData","initialDailyData","fetchAPI","LineGraph","labels","datasets","label","borderColor","color","backgroundColor","fill","legend","display","fontColor","fontSize","scales","yAxes","ticks","beginAtZero","xAxes","BarGraph","title","text","Footer","getFullYear","href","github","App","state","setState","this","image","src","logoImage","alt","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.00bd3e27.chunk.js","sourcesContent":["import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({\n\tdata: {\n\t\tconfirmed,\n\t\trecovered,\n\t\tdeaths,\n\t\tlastUpdate\n\t}\n}) => {\n\tlet options = {\n\t\tweekday: 'short',\n\t\tyear: 'numeric',\n\t\tmonth: 'long',\n\t\tday: 'numeric'\n\t};\n\n\tif (!confirmed) {\n\t\treturn 'Loading...';\n\t}\n\n\treturn (<div className={styles.container}>\n\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t<Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography className={styles.sec} gutterBottom>\n\t\t\t\t\t\tInfected\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t<CountUp end={confirmed.value} duration={2} separator=\",\"/>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography className={styles.sec}>\n\t\t\t\t\t\t{new Date(lastUpdate).toLocaleDateString(\"en-IN\", options)}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body1\" component=\"p\">\n\t\t\t\t\t\tTotal Active Cases of COVID-19 as of now.\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography className={styles.sec} gutterBottom>\n\t\t\t\t\t\tRecovered\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t<CountUp end={recovered.value} duration={1.5} separator=\",\"/>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography className={styles.sec}>\n\t\t\t\t\t\t{new Date(lastUpdate).toLocaleDateString(\"en-IN\", options)}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body1\" component=\"p\">\n\t\t\t\t\t\tNumber of people that have recovered from COVID-19.\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography className={styles.sec} gutterBottom>Deaths</Typography>\n\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t<CountUp end={deaths.value} duration={1} separator=\",\"/>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography className={styles.sec}>\n\t\t\t\t\t\t{new Date(lastUpdate).toLocaleDateString(\"en-IN\", options)}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body1\" component=\"p\">\n\t\t\t\t\t\tTotal Deaths due to COVID-19 as of now.\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t</Grid>\n\t\t</Grid>\n\t</div>);\n};\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\nconst dailyUrl = 'https://covid19.mathdro.id/api/daily';\nconst countriesUrl = 'https://covid19.mathdro.id/api/countries';\n\n\nexport const getData = async (country) => {\n\tlet countryUrl = url;\n\tif(country) {\n\t\tcountryUrl = `${url}/countries/${country}`\n\t}\n\ttry{\n\t\tconst { data } = await axios.get(countryUrl);\n\t\tconst reqdData = {\n\t\t\tconfirmed: data.confirmed,\n\t\t\trecovered: data.recovered,\n\t\t\tdeaths: data.deaths,\n\t\t\tlastUpdate: data.lastUpdate\n\t\t}\n\t\treturn(reqdData);\n\n\t}\n\tcatch(error){\n\t\treturn(error)\n\t}\n}\n\nexport const getDailyData = async () => {\n  \ttry {\n    \t\tconst { data } = await axios.get(dailyUrl);\n    \t\treturn data.map(({ confirmed, deaths, reportDate: date }) => ({\n\t\t\tconfirmed: confirmed.total,\n\t\t\tdeaths: deaths.total,\n\t\t\tdate }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getCountries = async () => {\n\ttry {\n\t\tconst { data: { countries }} = await axios.get(countriesUrl);\n\t\treturn countries.map((country) => country.name);\n\t} catch(error) {\n\t\treturn(error)\n\t}\n}\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './Country.module.css';\nimport { getCountries } from '../../api';\n\nconst Country = ({changeCountry}) => {\n\tconst[fetchedCountries, setFetchedCountries] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchCountries = async () => {\n\t\t\tsetFetchedCountries(await getCountries());\n\t\t}\n\t\tfetchCountries();\n\t}, [setFetchedCountries]);\n\n\treturn(\n\t\t<FormControl className={styles.formControl}>\n\t\t\t\t<NativeSelect className={styles.chosen} defaultValue=\"\" onChange={(e) => changeCountry(e.target.value)}>\n\t\t\t\t<option value=\"\">Global</option>\n\t\t\t\t{fetchedCountries.map((country, i) => <option key={i}  value={country}>{country}</option>)}\n\t\t\t</NativeSelect>\n\t\t</FormControl>\n\t)\n};\n\nexport default Country;\n","import React, { useState, useEffect } from \"react\";\nimport { getDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from './Graph.module.css';\n\nconst Graph = ({ data: { confirmed, recovered, deaths }, country }) => {\n\tconst [dailyData, setDailyData] = useState({});\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tconst initialDailyData = await getDailyData();\n\t\t\tsetDailyData(initialDailyData);\n\t\t};\n\tfetchAPI();\n\t}, [])\n\n\tconst LineGraph = (\n\t \tdailyData[0] ? (\n\t    \t<Line data = {{\n\t\t  \tlabels: dailyData.map(({ date }) => new Date(date).toLocaleDateString(\"en-US\", {month: 'short', day: 'numeric'})),\n\t\t  \tdatasets: [{\n\t\t\t    data: dailyData.map((data) => data.confirmed),\n\t\t\t    label: 'Infected',\n\t\t\t    borderColor: 'rgba(255, 150, 0, 0.9)',\n\t\t\t    color: 'white',\n\t\t\t    backgroundColor: 'rgba(255, 170, 0, 0.4)',\n\t\t\t    fill: true,\n\t\t  \t}, {\n\t\t\t    data: dailyData.map((data) => data.deaths),\n\t\t\t    label: 'Deaths',\n\t\t\t    borderColor: 'red',\n\t\t\t    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n\t\t\t    fill: true,\n\t\t\t},\n\t\t],\n\t}} options = {{\n\t\tlegend: {\n\t\t\tdisplay: true,\n\t\t\tlabels: {\n\t\t\t\t\t    fontColor: \"white\",\n\t\t\t\t\t    fontSize: 18\n\t\t\t\t\t}\n\t\t\t\t  },\n\t\t\t\t  scales: {\n\t\t\t\t\tyAxes: [{\n\t\t\t\t\t    ticks: {\n\t\t\t\t\t\t  fontColor: \"white\",\n\t\t\t\t\t\t  fontSize: 20,\n\t\t\t\t\t\t  beginAtZero: true\n\t\t\t\t\t    }\n\t\t\t\t\t}],\n\t\t\t\t\txAxes: [{\n\t\t\t\t\t    ticks: {\n\t\t\t\t\t\t  fontColor: \"white\",\n\t\t\t\t\t\t  fontSize: 18,\n\t\t\t\t\t\t  beginAtZero: true\n\t\t\t\t\t    }\n\t\t\t\t\t}]\n\t\t\t\t}\n\t}}\n\t    />\n\t  ) : null\n\t);\n\n\tconst BarGraph = (\n\t\tconfirmed ? (\n\t\t\t<Bar\n\t\t\t\tdata={{\n\t\t\t\t\tlabels: ['Infected', 'Recovered', 'Deaths'],\n\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\tlabel: 'People',\n\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t'rgba(255,\t170, \t0, 0.9)',\n\t\t\t\t\t\t\t'rgba(0, \t170,\t0, 0.6)',\n\t\t\t\t\t\t\t'rgba(255, \t0,\t0, 0.8)',\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdata:[confirmed.value, recovered.value, deaths.value]\n\t\t\t\t\t}]\n\t\t\t\t}}\n\t\t\t\toptions={{\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t                fontColor: \"white\",\n\t\t\t\t\t\t                fontSize: 18\n\t\t\t\t\t\t            }\n\t\t\t\t\t\t        },\n\t\t\t\t\t\t        scales: {\n\t\t\t\t\t\t            yAxes: [{\n\t\t\t\t\t\t                ticks: {\n\t\t\t\t\t\t                    fontColor: \"white\",\n\t\t\t\t\t\t                    fontSize: 20,\n\t\t\t\t\t\t                    beginAtZero: true\n\t\t\t\t\t\t                }\n\t\t\t\t\t\t            }],\n\t\t\t\t\t\t            xAxes: [{\n\t\t\t\t\t\t                ticks: {\n\t\t\t\t\t\t                    fontColor: \"white\",\n\t\t\t\t\t\t                    fontSize: 20,\n\t\t\t\t\t\t                    beginAtZero: true\n\t\t\t\t\t\t                }\n\t\t\t\t\t\t            }]\n\t\t\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttext: `Covid Numbers from ${country}`,\n\t\t\t\t\t\tfontColor: '#ddd',\n\t\t\t\t\t\tfontSize: 24}\n\t\t\t\t}} />\n\t\t) : null\n\t)\n\treturn(\n\t\t<div className = {styles.container}>\n\t\t\t{country ? BarGraph : LineGraph}\n\t\t</div>\n\t)\n};\n\nexport default Graph;\n","import React from \"react\";\nimport styles from './Footer.module.css';\n\n\nconst Footer = () => {\n  return (\n      <div className={styles.container}>\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"https://github.com/akshatk16\" className={styles.github}>  Akshat Kumar Agarwal </a>\n      </div>\n\t);\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport { Cards, Country, Graph, Footer } from './components';\nimport { getData } from './api/';\nimport styles from './App.module.css';\nimport logoImage from './images/logo.png'\n\nclass App extends React.Component {\n\tstate = {\n\t\tdata: {},\n\t\tcountry:'',\n\t}\n\n\tasync componentDidMount() {\n\t\tconst data = await getData();\n\t\tthis.setState({ data })\n\t}\n\n\tchangeCountry = async (country) => {\n\t\tconst data = await getData(country);\n\t\tthis.setState({ data, country })\n\t}\n\trender() {\n\t\tconst { data, country } = this.state;\n\n\t\treturn(\n\t\t\t<div className={styles.container}>\n\t\t\t\t<img className={styles.image} src={logoImage} alt=\"CORONAVIRUS\" />\n\t\t\t\t<Cards data={ data } />\n\t\t\t\t<Country changeCountry={this.changeCountry}  />\n\t\t\t\t<Graph data={ data } country={ country }/>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Country_formControl__3h-YE\",\"chosen\":\"Country_chosen__2vwCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__st7Zp\",\"github\":\"Footer_github__2uIUH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"sec\":\"Cards_sec__3Dsnb\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Graph_container__1MSHm\"};","module.exports = __webpack_public_path__ + \"static/media/logo.bc08d51c.png\";"],"sourceRoot":""}